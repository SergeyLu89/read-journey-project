{"version":3,"file":"static/js/404.76936d27.chunk.js","mappings":"iKACA,MAA8B,wC,8eCkC9B,EAhC2B,WACzB,OACEA,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAgBC,UAClCC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,UACEK,MAAM,sBACNC,KAAK,aACLC,OAAM,GAAAC,OAAKC,EAAsB,SAAAD,OAAQC,EAAwB,UAEnET,EAAAA,EAAAA,KAAA,UACEK,MAAM,sBACNC,KAAK,YACLC,OAAM,GAAAC,OAAKC,EAAsB,SAAAD,OAAQC,EAAwB,UAGnET,EAAAA,EAAAA,KAAA,UACEK,MAAM,qBACNC,KAAK,aACLC,OAAM,GAAAC,OAAKC,EAAqB,SAAAD,OAAQC,EAAuB,UAGjET,EAAAA,EAAAA,KAAA,UACEK,MAAM,qBACNC,KAAK,YACLC,OAAM,GAAAC,OAAKC,EAAqB,SAAAD,OAAQC,EAAuB,UAGjET,EAAAA,EAAAA,KAAA,OAAKO,OAAQE,EAAuBC,IAAI,eAIhD,C,oECjCA,MAA8B,+B,oBCA9B,EAA4B,6BAA5B,EAAqE,6BAArE,EAA8G,6BAA9G,EAA0J,gCAA1J,EAAuM,8BAAvM,EAAqP,iCAArP,EAA8R,yBAA9R,EAAiU,2BAAjU,EAA2W,gCAA3W,EAA4Z,kCAA5Z,EAAyc,4BAAzc,EAA8e,0BAA9e,EAAmhB,4BAAnhB,EAA4jB,8BAA5jB,EAA0mB,iCAA1mB,EAAqpB,2BAArpB,EAA+rB,gC,mGCUzrBC,EAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KACJC,MAAM,8BACNC,SAAS,4BACTC,QAAQ,oCACXC,SAAUJ,EAAAA,KACPE,SAAS,gCACTG,IAAI,EAAG,uBAwHZ,EArHkB,WAAO,IAADC,EAAAC,EAChBC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAIIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAAYC,UAAUC,EAAAA,EAAAA,GAAYrB,KAHpDsB,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aAAYC,EAAAP,EACZQ,UAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAAWJ,EAAXI,YAQhC,OACEnC,EAAAA,EAAAA,MAAA,WAASH,UAAWC,EAAcC,SAAA,EAChCH,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,KACLpC,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAcC,SAAA,CAAC,8BACFH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,eAElCC,EAAAA,EAAAA,MAAA,QACEqC,SAAUP,GAZC,SAAAQ,GACfC,QAAQC,IAAIF,GACZtB,GAASyB,EAAAA,EAAAA,IAAWH,GACtB,IAUMI,aAAa,MACb7C,UAAWC,EAAcC,SAAA,EAEzBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,aAAY5C,SAAC,WAC5BH,EAAAA,EAAAA,KAAA,SAAAgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE1C,KAAK,QACL2C,KAAK,QACLC,GAAG,cACCjB,EAAS,UAAQ,IACrBhC,UAAS,GAAAO,OAAKN,EAAc,KAAAM,OAAI6B,EAAOxB,OAASX,EAAS,mBAAAM,OACvD+B,EAAY1B,QAAUwB,EAAOxB,OAASX,EAAW,wBAG9C,OAANmC,QAAM,IAANA,OAAM,EAANA,EAAQxB,SACPT,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAhD,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,UAC3BH,EAAAA,EAAAA,KAAA,OAAKoD,KAAMC,EAAAA,EAAS,mBAEtBrD,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiBC,SAAc,QAAde,EAAEmB,EAAOxB,aAAK,IAAAK,OAAA,EAAZA,EAAcoC,aAGlDf,EAAY1B,QAAUwB,EAAOxB,QAC5BT,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAhD,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,UAC3BH,EAAAA,EAAAA,KAAA,OAAKoD,KAAMC,EAAAA,EAAS,mBAEtBrD,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAmBC,SAAC,kCAKxCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,gBAAe5C,SAAC,eAC/BH,EAAAA,EAAAA,KAAA,SAAAgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE1C,KAAMoB,EAAe,OAAS,WAC9BuB,KAAK,WACLC,GAAG,iBACCjB,EAAS,aAAW,IACxBhC,UAAS,GAAAO,OAAKN,EAAiB,KAAAM,OAAI6B,EAAOrB,UAAYd,EAAS,mBAAAM,OAC7D+B,EAAYvB,WAAaqB,EAAOrB,UAAYd,EAAW,uBAG1DwB,GACC1B,EAAAA,EAAAA,KAAA,OACEuD,QAAS,WACP5B,GAAiBD,EACnB,EACAzB,UAAS,GAAAO,OAAKN,EAAY,KAAAM,OAAIN,EAAU,KAAAM,OACtC6B,EAAOrB,UAAYd,EAAY,KAAAM,OAC7B+B,EAAYvB,WAAaqB,EAAOrB,UAAYd,GAAiBC,UAEjEH,EAAAA,EAAAA,KAAA,OAAKoD,KAAMC,EAAAA,EAAS,iBAGtBrD,EAAAA,EAAAA,KAAA,OACEuD,QAAS,WACP5B,GAAiBD,EACnB,EACAzB,UAAS,GAAAO,OAAKN,EAAY,KAAAM,OAAIN,EAAU,KAAAM,OACtC6B,EAAOrB,UAAYd,EAAY,KAAAM,OAC7B+B,EAAYvB,WAAaqB,EAAOrB,UAAYd,GAAiBC,UAEjEH,EAAAA,EAAAA,KAAA,OAAKoD,KAAMC,EAAAA,EAAS,qBAGjB,OAANhB,QAAM,IAANA,OAAM,EAANA,EAAQrB,YACPhB,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAAhD,UAIEH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiBC,SAAiB,QAAjBgB,EAAEkB,EAAOrB,gBAAQ,IAAAG,OAAA,EAAfA,EAAiBmC,YAGrDf,EAAYvB,WAAaqB,EAAOrB,WAC/BhB,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAAhD,UAIEH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAmBC,SAAC,6BAIxCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASkD,UAAWlB,EAASrC,UAAWC,EAAYC,SAAC,YAGlEH,EAAAA,EAAAA,KAACyD,EAAAA,GAAI,CAACxD,UAAWC,EAAkBwD,GAAG,YAAWvD,SAAC,mCAO5D,E,UC5HA,EARkB,WAChB,OACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAC2D,EAAS,KACV3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAkB,MAGzB,C","sources":["webpack://read-journey-project/./src/components/HeroImageComponent/HeroImageComponent.module.css?be06","components/HeroImageComponent/HeroImageComponent.jsx","webpack://read-journey-project/./src/pages/LoginPage/LoginPage.module.css?f8e0","webpack://read-journey-project/./src/components/Forms/AuthForms/LoginForm/LoginForm.module.css?4a70","components/Forms/AuthForms/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heroSection\":\"HeroImageComponent_heroSection__Dqf0T\"};","import css from './HeroImageComponent.module.css';\nimport * as heroImg from '../../assets/images/heroImage/index';\n\nconst HeroImageComponent = () => {\n  return (\n    <section className={css.heroSection}>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          type=\"image/webp\"\n          srcSet={`${heroImg.heroDesktopWeb} 1x, ${heroImg.heroDesktopWeb2x} 2x`}\n        />\n        <source\n          media=\"(min-width: 1440px)\"\n          type=\"image/png\"\n          srcSet={`${heroImg.heroDesktopPng} 1x, ${heroImg.heroDesktopPng2x} 2x`}\n        />\n\n        <source\n          media=\"(min-width: 375px)\"\n          type=\"image/webp\"\n          srcSet={`${heroImg.heroMobileWeb} 1x, ${heroImg.heroMobileWeb2x} 2x`}\n        />\n\n        <source\n          media=\"(min-width: 375px)\"\n          type=\"image/png\"\n          srcSet={`${heroImg.heroMobilePng} 1x, ${heroImg.heroMobilePng2x} 2x`}\n        />\n\n        <img srcSet={heroImg.heroMobilePng} alt=\"iPhone\" />\n      </picture>\n    </section>\n  );\n};\nexport default HeroImageComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageWrapper\":\"LoginPage_pageWrapper__Gg3CJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginBlok\":\"LoginForm_loginBlok__wlM4f\",\"mainTitle\":\"LoginForm_mainTitle__+S95j\",\"loginForm\":\"LoginForm_loginForm__62Mj4\",\"inputWrapper\":\"LoginForm_inputWrapper__8bb4W\",\"emailInput\":\"LoginForm_emailInput__I0YKY\",\"passwordInput\":\"LoginForm_passwordInput__I2sqr\",\"error\":\"LoginForm_error__mHU6m\",\"correct\":\"LoginForm_correct__-XySS\",\"errorMessage\":\"LoginForm_errorMessage__IE0L8\",\"correctMessage\":\"LoginForm_correctMessage__qM5JO\",\"inputSvg\":\"LoginForm_inputSvg__s4oEz\",\"eyeSvg\":\"LoginForm_eyeSvg__vHy+L\",\"eyeError\":\"LoginForm_eyeError__bpAWh\",\"eyeCorrect\":\"LoginForm_eyeCorrect__-2hBC\",\"buttonWrapper\":\"LoginForm_buttonWrapper__sxAgp\",\"formBtn\":\"LoginForm_formBtn__DVXZt\",\"registerLink\":\"LoginForm_registerLink__Pg4pp\"};","import css from './LoginForm.module.css';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logInThunk } from '../../../../redux/auth/authOperations';\nimport Logo from 'components/Header/Logo/Logo';\nimport sprite from '../../../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nconst schema = Yup.object({\n  email: Yup.string()\n    .email('Mail must be a valid email')\n    .required('Mail is a required field')\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/),\n  password: Yup.string()\n    .required('Password is a required field')\n    .min(7, 'Minimum 7 symbols'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, dirtyFields },\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(logInThunk(data));\n  };\n\n  return (\n    <section className={css.loginBlok}>\n      <Logo />\n      <h1 className={css.mainTitle}>\n        Expand your mind, reading <span>a book</span>\n      </h1>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        autoComplete=\"off\"\n        className={css.loginForm}\n      >\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"user_email\">Mail:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"user_email\"\n            {...register('email')}\n            className={`${css.emailInput} ${errors.email && css.error} \n            ${dirtyFields.email && !errors.email && css.correct}\n              `}\n          />\n          {errors?.email && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-error'}></use>\n              </svg>\n              <p className={css.errorMessage}>{errors.email?.message}</p>\n            </>\n          )}\n          {dirtyFields.email && !errors.email && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-check'}></use>\n              </svg>\n              <p className={css.correctMessage}>This is a correct mail</p>\n            </>\n          )}\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"user_password\">Password:</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            id=\"user_password\"\n            {...register('password')}\n            className={`${css.passwordInput} ${errors.password && css.error} \n            ${dirtyFields.password && !errors.password && css.correct}\n              `}\n          />\n          {showPassword ? (\n            <svg\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n              className={`${css.inputSvg} ${css.eyeSvg} ${\n                errors.password && css.eyeError\n              } ${dirtyFields.password && !errors.password && css.eyeCorrect}`}\n            >\n              <use href={sprite + '#icon-eye'}></use>\n            </svg>\n          ) : (\n            <svg\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n              className={`${css.inputSvg} ${css.eyeSvg} ${\n                errors.password && css.eyeError\n              } ${dirtyFields.password && !errors.password && css.eyeCorrect}`}\n            >\n              <use href={sprite + '#icon-eye-off'}></use>\n            </svg>\n          )}\n          {errors?.password && (\n            <>\n              {/* <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-error'}></use>\n              </svg> */}\n              <p className={css.errorMessage}>{errors.password?.message}</p>\n            </>\n          )}\n          {dirtyFields.password && !errors.password && (\n            <>\n              {/* <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-check'}></use>\n              </svg> */}\n              <p className={css.correctMessage}>Password is secure</p>\n            </>\n          )}\n        </div>\n        <div className={css.buttonWrapper}>\n          <button type=\"submit\" disabled={!isValid} className={css.formBtn}>\n            Log In\n          </button>\n          <Link className={css.registerLink} to=\"/register\">\n            Don't have an account?\n          </Link>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default LoginForm;\n","import css from './LoginPage.module.css';\n\nimport LoginForm from 'components/Forms/AuthForms/LoginForm/LoginForm';\nimport HeroImageComponent from 'components/HeroImageComponent/HeroImageComponent';\n\nconst LoginPage = () => {\n  return (\n    <div className={css.pageWrapper}>\n      <LoginForm />\n      <HeroImageComponent />\n    </div>\n  );\n};\nexport default LoginPage;\n"],"names":["_jsx","className","css","children","_jsxs","media","type","srcSet","concat","heroImg","alt","schema","Yup","email","required","matches","password","min","_errors$email","_errors$password","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","_useForm$formState","formState","errors","isValid","dirtyFields","Logo","onSubmit","data","console","log","logInThunk","autoComplete","htmlFor","_objectSpread","name","id","_Fragment","href","sprite","message","onClick","disabled","Link","to","LoginForm","HeroImageComponent"],"sourceRoot":""}