{"version":3,"file":"static/js/984.96ca2ee9.chunk.js","mappings":"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","sources":["webpack://read-journey-project/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","webpack://read-journey-project/./src/components/Forms/AuthForms/RegisterForm/RegisterForm.module.css?46f7","components/Forms/AuthForms/RegisterForm/RegisterForm.jsx","webpack://read-journey-project/./src/components/HeroImageComponent/HeroImageComponent.module.css?be06","components/HeroImageComponent/HeroImageComponent.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pageWrapper\":\"RegisterPage_pageWrapper__enStH\"};","// extracted by mini-css-extract-plugin\nexport default {\"registerBlok\":\"RegisterForm_registerBlok__UHP5s\",\"mainTitle\":\"RegisterForm_mainTitle__rlGfX\",\"registerForm\":\"RegisterForm_registerForm__zetPE\",\"inputWrapper\":\"RegisterForm_inputWrapper__yPfjX\",\"nameInput\":\"RegisterForm_nameInput__bGFu1\",\"emailInput\":\"RegisterForm_emailInput__SmClC\",\"passwordInput\":\"RegisterForm_passwordInput__t+rXQ\",\"error\":\"RegisterForm_error__DrL-o\",\"correct\":\"RegisterForm_correct__RLs-i\",\"errorMessage\":\"RegisterForm_errorMessage__w8y5O\",\"correctMessage\":\"RegisterForm_correctMessage__RUR-6\",\"inputSvg\":\"RegisterForm_inputSvg__u0hFk\",\"buttonWrapper\":\"RegisterForm_buttonWrapper__g3gC+\",\"formBtn\":\"RegisterForm_formBtn__s37qG\",\"loginLink\":\"RegisterForm_loginLink__+XqQI\"};","import css from './RegisterForm.module.css';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { registerThunk } from '../../../../redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport Logo from 'components/Header/Logo/Logo';\nimport sprite from '../../../../assets/images/sprite.svg';\nimport { useState } from 'react';\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .required('Name is a required field')\n    .min(2, 'Minimum 2 symbols'),\n  email: Yup.string()\n    .email('Mail must be a valid email')\n    .required('Mail is a required field')\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/),\n  password: Yup.string()\n    .required('Password is a required field')\n    .min(7, 'Minimum 7 symbols'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, dirtyFields },\n    reset,\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\n\n  const onSubmit = data => {\n    dispatch(registerThunk(data));\n    reset();\n  };\n\n  return (\n    <section className={css.registerBlok}>\n      <Logo />\n      <h1 className={css.mainTitle}>\n        Expand your mind, reading <span>a book</span>\n      </h1>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        autoComplete=\"off\"\n        className={css.registerForm}\n      >\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"user_name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"user_name\"\n            {...register('name')}\n            className={`${css.nameInput} ${errors?.name && css.error} \n            ${dirtyFields.name && !errors.name && css.correct}\n              `}\n          />\n          {errors?.name && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-error'}></use>\n              </svg>\n              <p className={css.errorMessage}>{errors.name?.message}</p>\n            </>\n          )}\n          {dirtyFields.name && !errors.name && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-check'}></use>\n              </svg>\n              <p className={css.correctMessage}>This is a correct name</p>\n            </>\n          )}\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"user_email\">Mail:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"user_email\"\n            {...register('email')}\n            className={`${css.emailInput} ${errors.email && css.error} \n            ${dirtyFields.email && !errors.email && css.correct}\n              `}\n          />\n          {errors?.email && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-error'}></use>\n              </svg>\n              <p className={css.errorMessage}>{errors.email?.message}</p>\n            </>\n          )}\n          {dirtyFields.email && !errors.email && (\n            <>\n              <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-check'}></use>\n              </svg>\n              <p className={css.correctMessage}>This is a correct mail</p>\n            </>\n          )}\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"user_password\">Password:</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            id=\"user_password\"\n            {...register('password')}\n            className={`${css.passwordInput} ${errors.password && css.error} \n            ${dirtyFields.password && !errors.password && css.correct}\n              `}\n          />\n          {showPassword ? (\n            <svg\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n              className={css.inputSvg}\n            >\n              <use href={sprite + '#icon-eye'}></use>\n            </svg>\n          ) : (\n            <svg\n              onClick={() => {\n                setShowPassword(!showPassword);\n              }}\n              className={css.inputSvg}\n            >\n              <use href={sprite + '#icon-eye-off'}></use>\n            </svg>\n          )}\n          {errors?.password && (\n            <>\n              {/* <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-error'}></use>\n              </svg> */}\n              <p className={css.errorMessage}>{errors.password?.message}</p>\n            </>\n          )}\n          {dirtyFields.password && !errors.password && (\n            <>\n              {/* <svg className={css.inputSvg}>\n                <use href={sprite + '#icon-check'}></use>\n              </svg> */}\n              <p className={css.correctMessage}>Password is secure</p>\n            </>\n          )}\n        </div>\n        <div className={css.buttonWrapper}>\n          <button type=\"submit\" disabled={!isValid} className={css.formBtn}>\n            Registration\n          </button>\n          <Link className={css.loginLink} to=\"/login\">\n            Already have an account?\n          </Link>\n        </div>\n      </form>\n    </section>\n  );\n};\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"heroSection\":\"HeroImageComponent_heroSection__Dqf0T\"};","import css from './HeroImageComponent.module.css';\nimport * as heroImg from '../../assets/images/heroImage/index';\n\nconst HeroImageComponent = () => {\n  return (\n    <section className={css.heroSection}>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          type=\"image/webp\"\n          srcSet={`${heroImg.heroDesktopWeb} 1x, ${heroImg.heroDesktopWeb2x} 2x`}\n        />\n        <source\n          media=\"(min-width: 1440px)\"\n          type=\"image/png\"\n          srcSet={`${heroImg.heroDesktopPng} 1x, ${heroImg.heroDesktopPng2x} 2x`}\n        />\n\n        <source\n          media=\"(min-width: 375px)\"\n          type=\"image/webp\"\n          srcSet={`${heroImg.heroMobileWeb} 1x, ${heroImg.heroMobileWeb2x} 2x`}\n        />\n\n        <source\n          media=\"(min-width: 375px)\"\n          type=\"image/png\"\n          srcSet={`${heroImg.heroMobilePng} 1x, ${heroImg.heroMobilePng2x} 2x`}\n        />\n\n        <img srcSet={heroImg.heroMobilePng} alt=\"iPhone\" />\n      </picture>\n    </section>\n  );\n};\nexport default HeroImageComponent;\n","import css from './RegisterPage.module.css';\n\nimport RegisterForm from 'components/Forms/AuthForms/RegisterForm/RegisterForm';\nimport HeroImageComponent from 'components/HeroImageComponent/HeroImageComponent';\n\nconst RegisterPage = () => {\n  return (\n    <div className={css.pageWrapper}>\n      <RegisterForm />\n      <HeroImageComponent />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["schema","Yup","name","required","min","email","matches","password","_errors$name","_errors$email","_errors$password","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","_useForm$formState","formState","errors","isValid","dirtyFields","reset","_jsxs","className","css","children","_jsx","Logo","onSubmit","data","registerThunk","autoComplete","htmlFor","_objectSpread","type","id","concat","_Fragment","href","sprite","message","onClick","disabled","Link","to","media","srcSet","heroImg","alt","RegisterForm","HeroImageComponent"],"sourceRoot":""}