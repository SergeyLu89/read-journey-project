{"version":3,"file":"static/js/289.d6a01b91.chunk.js","mappings":"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","sources":["webpack://read-journey-project/./src/pages/MyLibraryPage/MyLibraryPage.module.css?59c1","webpack://read-journey-project/./src/components/Forms/MyLibraryForm/MyLibraryForm.module.css?0e8a","webpack://read-journey-project/./src/components/MyLibraryBooks/SuccesNotification/SuccesNotification.module.css?d2ce","components/MyLibraryBooks/SuccesNotification/SuccesNotification.jsx","components/Forms/MyLibraryForm/MyLibraryForm.jsx","webpack://read-journey-project/./src/components/MyLibraryBooks/MyLibraryBooksList/MyLibraryBooksList.module.css?b3d8","redux/books/libraryBooks/libraryBooksSelectors.js","webpack://read-journey-project/./src/components/MyLibraryBooks/MyLibraryBooksItem/MyLibraryBooksItem.module.css?bed1","components/MyLibraryBooks/MyLibraryBooksItem/MyLibraryBooksItem.jsx","components/MyLibraryBooks/MyLibraryBooksList/MyLibraryBooksList.jsx","webpack://read-journey-project/./src/components/MyLibraryBooks/RecommendedBlok/RecommendedBlok.module.css?e865","components/MyLibraryBooks/RecommendedBlok/RecommendedBlok.jsx","pages/MyLibraryPage/MyLibraryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"libraryPageWrapper\":\"MyLibraryPage_libraryPageWrapper__twaAy\"};","// extracted by mini-css-extract-plugin\nexport default {\"formTitile\":\"MyLibraryForm_formTitile__Wwd2H\",\"libraryForm\":\"MyLibraryForm_libraryForm__x8HFe\",\"inputWrapper\":\"MyLibraryForm_inputWrapper__KcMJ-\",\"titleInput\":\"MyLibraryForm_titleInput__t53eH\",\"authorInput\":\"MyLibraryForm_authorInput__p8hWU\",\"pagesInput\":\"MyLibraryForm_pagesInput__yVhGw\",\"error\":\"MyLibraryForm_error__piFXI\",\"correct\":\"MyLibraryForm_correct__T3env\",\"errorMessage\":\"MyLibraryForm_errorMessage__qJAvU\",\"correctMessage\":\"MyLibraryForm_correctMessage__k6AuD\",\"formBtn\":\"MyLibraryForm_formBtn__v+rG-\",\"formBnt\":\"MyLibraryForm_formBnt__4MAeZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"notificationWrapper\":\"SuccesNotification_notificationWrapper__sDU4Q\",\"likeImage\":\"SuccesNotification_likeImage__vxSyh\",\"notificationDescr\":\"SuccesNotification_notificationDescr__TPyP6\",\"notificationDescrAccent\":\"SuccesNotification_notificationDescrAccent__1CZLe\"};","import css from './SuccesNotification.module.css';\nimport { likePng } from '../../../assets/images/defaultImages/defaultImages';\n\nconst SuccesNotification = () => {\n  return (\n    <div className={css.notificationWrapper}>\n      <img src={likePng} alt=\"like\" className={css.likeImage} />\n      <h3>Good job</h3>\n      <p className={css.notificationDescr}>\n        Your book is now in{' '}\n        <span className={css.notificationDescrAccent}>the library!</span> The\n        joy knows no bounds and now you can start your training\n      </p>\n    </div>\n  );\n};\nexport default SuccesNotification;\n","import css from './MyLibraryForm.module.css';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { createLibraryBooksThunk } from '../../../redux/books/libraryBooks/libraryBooksOperations';\nimport Modal from 'components/reUseComponents/Modal/Modal';\nimport SuccesNotification from 'components/MyLibraryBooks/SuccesNotification/SuccesNotification';\n\nconst schema = Yup.object({\n  title: Yup.string().required('Book title is a required field'),\n  author: Yup.string().required('The author is a required field'),\n  totalPages: Yup.number()\n    .required('Number of pages is a required field')\n    .typeError('Hmm... I think this is not a number :)')\n    .min(1, 'There must be more than 0 pages'),\n});\n\nconst MyLibraryForm = () => {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid, dirtyFields },\n    reset,\n  } = useForm({ mode: 'onChange', resolver: yupResolver(schema) });\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const onSubmit = async data => {\n    try {\n      await dispatch(createLibraryBooksThunk(data)).unwrap();\n      reset();\n      openModal();\n    } catch (error) {\n      console.error(error);\n      alert(error.message);\n    }\n  };\n\n  return (\n    <section className={css.libraryFormSection}>\n      <p className={css.formTitile}>Create your library:</p>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        autoComplete=\"off\"\n        className={css.libraryForm}\n      >\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"title\">Book title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            {...register('title')}\n            className={`${css.titleInput} ${errors.title && css.error} \n            ${dirtyFields.title && !errors.title && css.correct}`}\n          />\n          {errors?.title && (\n            <p className={css.errorMessage}>{errors.title?.message}</p>\n          )}\n          {dirtyFields.title && !errors.title && (\n            <p className={css.correctMessage}>Fitting title</p>\n          )}\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"author\">The author:</label>\n          <input\n            type=\"text\"\n            name=\"author\"\n            id=\"author\"\n            {...register('author')}\n            className={`${css.authorInput} ${errors.author && css.error} \n            ${dirtyFields.author && !errors.author && css.correct}`}\n          />\n          {errors?.author && (\n            <p className={css.errorMessage}>{errors.author?.message}</p>\n          )}\n          {dirtyFields.author && !errors.author && (\n            <p className={css.correctMessage}>Fitting author</p>\n          )}\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"pages\">Number of pages:</label>\n          <input\n            type=\"text\"\n            name=\"pages\"\n            id=\"pages\"\n            {...register('totalPages')}\n            className={`${css.pagesInput} ${errors.totalPages && css.error} \n            ${dirtyFields.totalPages && !errors.totalPages && css.correct}`}\n          />\n          {errors?.totalPages && (\n            <p className={css.errorMessage}>{errors.totalPages?.message}</p>\n          )}\n          {dirtyFields.totalPages && !errors.totalPages && (\n            <p className={css.correctMessage}>Almost done</p>\n          )}\n        </div>\n\n        <button type=\"submit\" disabled={!isValid} className={css.formBtn}>\n          Add book\n        </button>\n      </form>\n      {isOpen && (\n        <Modal isOpen={isOpen} closeFnc={closeModal}>\n          <SuccesNotification />\n        </Modal>\n      )}\n    </section>\n  );\n};\nexport default MyLibraryForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"libraryBooks\":\"MyLibraryBooksList_libraryBooks__Gg5lX\",\"libraryBooksTitle\":\"MyLibraryBooksList_libraryBooksTitle__IQGIX\",\"libraryBooksList\":\"MyLibraryBooksList_libraryBooksList__fetOP\",\"noContentBox\":\"MyLibraryBooksList_noContentBox__2E29D\",\"imgWrapper\":\"MyLibraryBooksList_imgWrapper__Cm-zJ\",\"booksImage\":\"MyLibraryBooksList_booksImage__Z9K8+\"};","export const selectLibraryBooks = state => state.library.libraryBooks;\nexport const selectLibraryTotalCount = state => state.library.totalCount;\nexport const selectLibraryIsLoading = state => state.library.isLoading;\nexport const selectLibraryError = state => state.library.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOpenBtn\":\"MyLibraryBooksItem_modalOpenBtn__sFJ1A\",\"bookImage\":\"MyLibraryBooksItem_bookImage__OI0l1\",\"descriptionWrapper\":\"MyLibraryBooksItem_descriptionWrapper__1cGlY\",\"libraryBooksItem\":\"MyLibraryBooksItem_libraryBooksItem__mNYmn\",\"deleteBtn\":\"MyLibraryBooksItem_deleteBtn__NZnmH\",\"btnWrapper\":\"MyLibraryBooksItem_btnWrapper__pvMzW\"};","import css from './MyLibraryBooksItem.module.css';\nimport sprite from '../../../assets/images/sprite.svg';\nimport Modal from 'components/reUseComponents/Modal/Modal';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport BookInfoComponent from 'components/reUseComponents/BookInfoComponent/BookInfoComponent';\nimport UniversalButton from 'components/reUseComponents/UniversalButton/UniversalButton';\nimport { removeLibraryBooksThunk } from '../../../redux/books/libraryBooks/libraryBooksOperations';\nimport { defaultImageBookSmallPng } from 'assets/images/defaultImages/defaultImages';\nimport { useNavigate } from 'react-router-dom';\n\nconst MyLibraryBooksItem = ({ book }) => {\n  const { author, imageUrl, title, _id } = book;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleStartReading = () => {\n    navigate('/reading', { state: { bookId: _id } });\n  };\n\n  return (\n    <>\n      <li className={css.libraryBooksItem}>\n        <button type=\"button\" onClick={openModal} className={css.modalOpenBtn}>\n          <img\n            src={imageUrl ? imageUrl : defaultImageBookSmallPng}\n            alt={title}\n            className={css.bookImage}\n          />\n        </button>\n        <div className={css.btnWrapper}>\n          <div className={css.descriptionWrapper}>\n            <h4>{title}</h4>\n            <p>{author}</p>\n          </div>\n\n          <button\n            type=\"button\"\n            className={css.deleteBtn}\n            onClick={() => {\n              dispatch(removeLibraryBooksThunk(_id));\n            }}\n          >\n            <svg width=\"14\" height=\"14\" aria-label=\"trash icon\">\n              <use href={sprite + '#icon-trash'}></use>\n            </svg>\n          </button>\n        </div>\n      </li>\n      {isOpen && (\n        <Modal isOpen={isOpen} closeFnc={closeModal}>\n          <BookInfoComponent book={book} />\n          <UniversalButton\n            title={'Start reading'}\n            btnFunction={handleStartReading}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default MyLibraryBooksItem;\n","import css from './MyLibraryBooksList.module.css';\nimport { booksPng } from '../../../assets/images/defaultImages/defaultImages';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLibraryBooksThunk } from '../../../redux/books/libraryBooks/libraryBooksOperations';\nimport {\n  selectLibraryBooks,\n  selectLibraryError,\n  selectLibraryIsLoading,\n} from '../../../redux/books/libraryBooks/libraryBooksSelectors';\nimport MyLibraryBooksItem from '../MyLibraryBooksItem/MyLibraryBooksItem';\n\nconst MyLibraryBooksList = () => {\n  const userBooks = useSelector(selectLibraryBooks);\n  const isLoading = useSelector(selectLibraryIsLoading);\n  const isError = useSelector(selectLibraryError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLibraryBooksThunk());\n  }, [dispatch]);\n\n  return (\n    <section className={css.libraryBooks}>\n      {isError && <p>Oops, something went wrong.</p>}\n      <h2 className={css.libraryBooksTitle}>My library</h2>\n      {isLoading && <p>Loading...</p>}\n      {userBooks.length !== 0 ? (\n        <ul className={css.libraryBooksList}>\n          {userBooks.map(book => (\n            <MyLibraryBooksItem book={book} key={book._id} />\n          ))}\n        </ul>\n      ) : (\n        <div className={css.noContentBox}>\n          <div className={css.imgWrapper}>\n            <img src={booksPng} alt=\"like\" className={css.booksImage} />\n          </div>\n          <p>\n            To start training, add <span>some of your books</span> or from the\n            recommended ones\n          </p>\n        </div>\n      )}\n    </section>\n  );\n};\nexport default MyLibraryBooksList;\n","// extracted by mini-css-extract-plugin\nexport default {\"recommendedSection\":\"RecommendedBlok_recommendedSection__vTML0\",\"recommendedSectionList\":\"RecommendedBlok_recommendedSectionList__uTqvU\",\"recommendedSectionListItem\":\"RecommendedBlok_recommendedSectionListItem__RdJKu\",\"recommendedLinkWrapper\":\"RecommendedBlok_recommendedLinkWrapper__hFR3i\",\"recommendedLink\":\"RecommendedBlok_recommendedLink__L2MhS\",\"recommendedLinkSvg\":\"RecommendedBlok_recommendedLinkSvg__7LDoN\"};","import css from './RecommendedBlok.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getRecommended } from '../../../redux/books/recommendedBooks/recommendedBooksOperations';\nimport { defaultImageBookSmallPng } from 'assets/images/defaultImages/defaultImages';\nimport { Link } from 'react-router-dom';\nimport sprite from '../../../assets/images/sprite.svg';\n\nconst RecommendedBlok = () => {\n  const dispatch = useDispatch();\n\n  const getRandomElements = (arr, count) => {\n    return arr\n      .slice()\n      .sort(() => Math.random() - 0.5)\n      .slice(0, count);\n  };\n\n  const [resultArray, setResultArray] = useState([]);\n\n  useEffect(() => {\n    const fetchRecommendedBooks = async () => {\n      const searchParams = new URLSearchParams({ limit: 30 });\n      try {\n        const fetchedBooks = await dispatch(\n          getRecommended(searchParams)\n        ).unwrap();\n        const randomSelection = getRandomElements(fetchedBooks.results, 3);\n        setResultArray(randomSelection);\n      } catch (error) {\n        console.error('Error fetching recommended books:', error);\n      }\n    };\n\n    fetchRecommendedBooks();\n  }, [dispatch]);\n\n  return (\n    <section className={css.recommendedSection}>\n      <h3>Recommended books</h3>\n      <ul className={css.recommendedSectionList}>\n        {resultArray.map(({ imageUrl, title, author, _id }) => (\n          <li key={_id} className={css.recommendedSectionListItem}>\n            <img\n              src={imageUrl ? imageUrl : defaultImageBookSmallPng}\n              alt={title}\n            />\n            <h4>{title}</h4>\n            <p>{author}</p>\n          </li>\n        ))}\n      </ul>\n      <div className={css.recommendedLinkWrapper}>\n        <Link className={css.recommendedLink} to=\"/\">\n          Home\n        </Link>\n        <Link className={css.recommendedLinkSvg} to=\"/\">\n          <svg aria-label=\"arrow icon\">\n            <use href={sprite + '#icon-log-in'}></use>\n          </svg>\n        </Link>\n      </div>\n    </section>\n  );\n};\nexport default RecommendedBlok;\n","import css from './MyLibraryPage.module.css';\n\nimport MyLibraryForm from 'components/Forms/MyLibraryForm/MyLibraryForm';\nimport MyLibraryBooksList from 'components/MyLibraryBooks/MyLibraryBooksList/MyLibraryBooksList';\nimport RecommendedBlok from 'components/MyLibraryBooks/RecommendedBlok/RecommendedBlok';\nimport Dashboard from 'components/reUseComponents/Dashboard/Dashboard';\n\nconst MyLibraryPage = () => {\n  return (\n    <div className={css.libraryPageWrapper}>\n      <Dashboard>\n        <MyLibraryForm />\n        <RecommendedBlok />\n      </Dashboard>\n      <MyLibraryBooksList />\n    </div>\n  );\n};\nexport default MyLibraryPage;\n"],"names":["_jsxs","className","css","children","_jsx","src","likePng","alt","schema","Yup","title","required","author","totalPages","typeError","min","_errors$title","_errors$author","_errors$totalPages","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","_useForm$formState","formState","errors","isValid","dirtyFields","reset","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","createLibraryBooksThunk","unwrap","t0","console","error","alert","message","stop","_x","apply","arguments","autoComplete","htmlFor","_objectSpread","type","name","id","concat","disabled","Modal","closeFnc","SuccesNotification","selectLibraryBooks","state","library","libraryBooks","selectLibraryIsLoading","isLoading","selectLibraryError","book","imageUrl","_id","navigate","useNavigate","_Fragment","onClick","defaultImageBookSmallPng","removeLibraryBooksThunk","width","height","href","sprite","BookInfoComponent","UniversalButton","btnFunction","bookId","userBooks","useSelector","isError","useEffect","getLibraryBooksThunk","length","map","MyLibraryBooksItem","booksPng","resultArray","setResultArray","fetchRecommendedBooks","searchParams","fetchedBooks","randomSelection","URLSearchParams","limit","getRecommended","sent","arr","results","count","slice","sort","Math","random","_ref2","Link","to","Dashboard","MyLibraryForm","RecommendedBlok","MyLibraryBooksList"],"sourceRoot":""}