{"version":3,"file":"static/js/590.d50bad48.chunk.js","mappings":"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","sources":["hooks/useRecommendedFilter.js","webpack://read-journey-project/./src/components/Forms/RecommendedFilter/RecommendedFilter.module.css?dd49","components/Forms/RecommendedFilter/RecommendedFilter.jsx","components/RecommendedBooks/Functionality/Functionality.module.css","components/RecommendedBooks/Functionality/Functionality.jsx","components/RecommendedBooks/QuoteBlock/QuoteBlock.jsx","webpack://read-journey-project/./src/components/reUseComponents/Paginator/Paginator.module.css?e6a2","components/reUseComponents/Paginator/Paginator.jsx","components/reUseComponents/BookInfoComponent/BookInfoComponent.jsx","webpack://read-journey-project/./src/components/RecommendedBooks/RecommendedBooksItem/RecommendedBooksItem.module.css?d59c","webpack://read-journey-project/./src/components/reUseComponents/Modal/Modal.module.css?9cb8","components/reUseComponents/Modal/Modal.jsx","components/RecommendedBooks/RecommendedBooksItem/RecommendedBooksItem.jsx","redux/books/recommendedBooks/recommendedBooksSelectors.js","constants/deviceTypes.js","constants/breakpoints.js","hooks/usePagination.js","helpers/getDeviceType.js","constants/paginationLimits.js","components/RecommendedBooks/RecommendedBooksList/RecommendedBooksList.jsx","components/reUseComponents/Dashboard/Dashboard.module.css","components/reUseComponents/Dashboard/Dashboard.jsx","pages/RecommendedPage/RecommendedPage.jsx"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\n\nexport const useRecommendedFilter = () => {\n  const [params, setParams] = useSearchParams();\n  const title = params.get('title') ?? '';\n  const author = params.get('author') ?? '';\n\n  const setRecommendedFilter = (key, value) => {\n    if (value === '') {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n\n    params.set('page', 1);\n    setParams(params);\n  };\n\n  const resetRecommendedFilter = () => {\n    setParams({ title: '', author: '' });\n  };\n\n  return {\n    title,\n    author,\n    setRecommendedFilter,\n    resetRecommendedFilter,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"RecommendedFilter_filterForm__M5N9x\"};","import { useRecommendedFilter } from 'hooks/useRecommendedFilter';\nimport css from './RecommendedFilter.module.css';\nimport { useForm } from 'react-hook-form';\n\nconst RecommendedFilter = () => {\n  const { title, author, setRecommendedFilter } = useRecommendedFilter();\n  const { handleSubmit, setValue, watch } = useForm({\n    defaultValues: {\n      title: title || '',\n      author: author || '',\n    },\n  });\n\n  const onSubmit = values => {\n    console.log('values: ', values);\n    setRecommendedFilter('title', values.title);\n    setRecommendedFilter('author', values.author);\n  };\n\n  return (\n    <section className={css.recommendedFilter}>\n      <p>Filters:</p>\n      <form\n        autoComplete=\"off\"\n        className={css.filterForm}\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"title\">Book title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            onChange={e => {\n              setValue('title', e.target.value);\n            }}\n            value={watch('title' || '')}\n          />\n        </div>\n\n        <div className={css.inputWrapper}>\n          <label htmlFor=\"author\">The author:</label>\n          <input\n            type=\"text\"\n            name=\"author\"\n            id=\"author\"\n            onChange={e => {\n              setValue('author', e.target.value);\n            }}\n            value={watch('author' || '')}\n          />\n        </div>\n\n        <button type=\"submit\">To apply</button>\n      </form>\n    </section>\n  );\n};\nexport default RecommendedFilter;\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './Functionality.module.css';\n\nimport { Link } from 'react-router-dom';\n\nconst Functionality = () => {\n  return (\n    <>\n      <h3>Start your workout</h3>\n      <ul>\n        <li>\n          <div>1</div>\n          <p>\n            <span>Create a personal library:</span> add the books you intend to\n            read to it.\n          </p>\n        </li>\n        <li>\n          <div>2</div>\n          <p>\n            <span>Create your first workout:</span> define a goal, choose a\n            period, start training.\n          </p>\n        </li>\n      </ul>\n      <Link className={css.functionalityLink} to=\"/library\">\n        Already have an account?\n      </Link>\n    </>\n  );\n};\nexport default Functionality;\n","// import css from './QuoteBlock.module.css'\n\nconst QuoteBlock = () => {\n  return (\n    <div>\n      <div>SVG заглушка</div>\n      <p>\n        \"Books are <span>windows</span> to the world, and reading is a journey\n        into the unknown.\"\n      </p>\n    </div>\n  );\n};\nexport default QuoteBlock;\n","// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__MTku1\"};","import css from './Paginator.module.css';\n\nconst Paginator = ({ setPage, page, totalPages }) => {\n  const incrementPage = () => {\n    setPage(page + 1);\n  };\n  const decrementPage = () => {\n    setPage(page - 1);\n  };\n  return (\n    <ul className={css.paginator}>\n      <li>\n        <button type=\"button\" disabled={page === 1} onClick={decrementPage}>\n          Left\n        </button>\n      </li>\n      <li>\n        <button\n          type=\"button\"\n          disabled={page === totalPages}\n          onClick={incrementPage}\n        >\n          Right\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default Paginator;\n","// import css from './BookInfoComponent.module.css'\n\nconst BookInfoComponent = ({ book }) => {\n  const { author, imageUrl, title, totalPages } = book;\n\n  return (\n    <>\n      <img src={imageUrl} alt={title} />\n      <h3>{title}</h3>\n      <p>{author}</p>\n      <p>{totalPages}</p>\n    </>\n  );\n};\nexport default BookInfoComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOpenBtn\":\"RecommendedBooksItem_modalOpenBtn__ijhEG\",\"bookImage\":\"RecommendedBooksItem_bookImage__M0zEw\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__EiMyu\",\"modal\":\"Modal_modal__8P5D2\",\"modalCloseBtn\":\"Modal_modalCloseBtn__DvDur\"};","import css from './Modal.module.css';\nimport sprite from '../../../assets/images/sprite.svg';\nimport { useCallback, useEffect } from 'react';\n\nconst Modal = ({ children, isOpen, closeFnc }) => {\n  const closeOnClick = useCallback(() => {\n    if (isOpen) {\n      closeFnc();\n    }\n  }, [isOpen, closeFnc]);\n\n  useEffect(() => {\n    const onPressEsc = event => {\n      if (event.code === 'Escape') {\n        closeOnClick();\n      }\n    };\n    window.addEventListener('keydown', onPressEsc);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', onPressEsc);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeOnClick]);\n\n  const onOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      closeOnClick();\n    }\n  };\n\n  return (\n    <div className={css.backdrop} onClick={onOverlayClick}>\n      <div className={css.modal}>\n        <button className={css.modalCloseBtn} onClick={closeOnClick}>\n          <svg width=\"22\" height=\"22\" aria-label=\"cross icon\">\n            <use href={sprite + '#icon-sross'}></use>\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import BookInfoComponent from 'components/reUseComponents/BookInfoComponent/BookInfoComponent';\nimport css from './RecommendedBooksItem.module.css';\n\nimport Modal from 'components/reUseComponents/Modal/Modal';\nimport { useState } from 'react';\n\nconst RecommendedBooksItem = ({ book }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const { author, imageUrl, title } = book;\n  return (\n    <>\n      <li>\n        <button type=\"button\" onClick={openModal} className={css.modalOpenBtn}>\n          <img src={imageUrl} alt={title} className={css.bookImage} />\n        </button>\n\n        <h4>{title}</h4>\n        <p>{author}</p>\n      </li>\n      {isOpen && (\n        <Modal isOpen={isOpen} closeFnc={closeModal}>\n          <BookInfoComponent book={book} />\n          <button type=\"button\">Add to library</button>\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default RecommendedBooksItem;\n","export const selectRecommendedBooks = state => state.recommended.recommended;\nexport const selectRecommendedTotalPages = state =>\n  state.recommended.totalPages;\nexport const selectRecommendedIsLoading = state => state.recommended.isLoading;\nexport const selectRecommendedError = state => state.auth.error;\n","export const DeviceTypes = {\n  MOBILE: 'mobile',\n  TABLET: 'tablet',\n  DESKTOP: 'desktop',\n};\n","export const Breakpoints = {\n  MOBILE: 375,\n  TABLET: 768,\n  DESKTOP: 1440,\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { getDeviceType } from 'helpers/getDeviceType';\n\nexport const usePagination = pageLimits => {\n  const [params, setParams] = useSearchParams();\n  const page = params.get('page') ?? 1;\n  const limit = params.get('limit') ?? pageLimits[getDeviceType()];\n\n  const setPage = value => {\n    params.set('page', value);\n    setParams(params);\n  };\n\n  const setLimit = value => {\n    params.set('limit', value);\n    setParams(params);\n  };\n\n  return {\n    page: Number(page),\n    limit: Number(limit),\n    setPage,\n    setLimit,\n  };\n};\n","import { DeviceTypes } from 'constants/deviceTypes';\nimport { Breakpoints } from 'constants/breakpoints';\n\nexport const getDeviceType = () => {\n  if (window.innerWidth >= Breakpoints.DESKTOP) {\n    return DeviceTypes.DESKTOP;\n  }\n\n  if (window.innerWidth >= Breakpoints.TABLET) {\n    return DeviceTypes.TABLET;\n  }\n\n  return DeviceTypes.MOBILE;\n};\n","import { DeviceTypes } from './deviceTypes';\n\nconst RecommendedBooksLimit = {\n  [DeviceTypes.MOBILE]: 2,\n  [DeviceTypes.TABLET]: 8,\n  [DeviceTypes.DESKTOP]: 10,\n};\n\nexport { RecommendedBooksLimit };\n","// import css from './RecommendedBooksList.module.css';\n\nimport Paginator from 'components/reUseComponents/Paginator/Paginator';\nimport RecommendedBooksItem from '../RecommendedBooksItem/RecommendedBooksItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectRecommendedBooks,\n  selectRecommendedTotalPages,\n  selectRecommendedIsLoading,\n  // selectRecommendedError,\n} from '../../../redux/books/recommendedBooks/recommendedBooksSelectors';\nimport { getRecommended } from '../../../redux/books/recommendedBooks/recommendedBooksOperations';\nimport { useEffect } from 'react';\nimport { usePagination } from 'hooks/usePagination';\nimport { RecommendedBooksLimit } from 'constants/paginationLimits';\nimport { useRecommendedFilter } from 'hooks/useRecommendedFilter';\n\nconst RecommendedBooksList = () => {\n  const { page, limit, setPage } = usePagination(RecommendedBooksLimit);\n  const { title, author } = useRecommendedFilter();\n\n  const dispatch = useDispatch();\n  const books = useSelector(selectRecommendedBooks);\n  const totalPages = useSelector(selectRecommendedTotalPages);\n  const isLoading = useSelector(selectRecommendedIsLoading);\n  // const isError = useSelector(selectRecommendedError);\n\n  useEffect(() => {\n    let validPage = page;\n    if (isNaN(parseInt(page)) || page <= 0) validPage = 1;\n\n    const searchParams = new URLSearchParams({ page: validPage, limit });\n    if (title) searchParams.set('title', title);\n    if (author) searchParams.set('author', author);\n\n    dispatch(getRecommended(searchParams));\n  }, [dispatch, page, limit, title, author]);\n\n  return (\n    <section>\n      <h2>Recommended</h2>\n      {isLoading && <p>Loading...</p>}\n      {totalPages > 0 ? (\n        <>\n          <Paginator setPage={setPage} page={page} totalPages={totalPages} />\n          <ul>\n            {books.map(book => (\n              <RecommendedBooksItem book={book} key={book._id} />\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p> Nothing found</p>\n      )}\n    </section>\n  );\n};\nexport default RecommendedBooksList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './Dashboard.module.css';\n\nconst Dashboard = ({ children }) => {\n  return <section className={css.dashboard}>{children}</section>;\n};\nexport default Dashboard;\n","// import css from './RecommendedPage.module.css';\nimport RecommendedFilter from 'components/Forms/RecommendedFilter/RecommendedFilter';\nimport Functionality from 'components/RecommendedBooks/Functionality/Functionality';\nimport QuoteBlock from 'components/RecommendedBooks/QuoteBlock/QuoteBlock';\nimport RecommendedBooksList from 'components/RecommendedBooks/RecommendedBooksList/RecommendedBooksList';\nimport Dashboard from 'components/reUseComponents/Dashboard/Dashboard';\n\nconst RecommendedPage = () => {\n  return (\n    <>\n      <Dashboard>\n        <RecommendedFilter />\n        <Functionality />\n        <QuoteBlock />\n      </Dashboard>\n      <RecommendedBooksList />\n    </>\n  );\n};\nexport default RecommendedPage;\n"],"names":["useRecommendedFilter","_params$get","_params$get2","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","title","get","author","setRecommendedFilter","key","value","delete","set","resetRecommendedFilter","_useRecommendedFilter","_useForm","useForm","defaultValues","handleSubmit","setValue","watch","_jsxs","className","css","children","_jsx","autoComplete","onSubmit","values","console","log","htmlFor","type","name","id","onChange","e","target","_Fragment","Link","to","_ref","setPage","page","totalPages","disabled","onClick","book","imageUrl","src","alt","isOpen","closeFnc","closeOnClick","useCallback","useEffect","onPressEsc","event","code","window","addEventListener","document","body","style","overflow","removeEventListener","currentTarget","width","height","href","sprite","_useState","useState","_useState2","setIsOpen","Modal","BookInfoComponent","selectRecommendedBooks","state","recommended","selectRecommendedTotalPages","selectRecommendedIsLoading","isLoading","DeviceTypes","Breakpoints","usePagination","pageLimits","limit","innerWidth","Number","setLimit","RecommendedBooksLimit","_RecommendedBooksLimi","_defineProperty","_usePagination","dispatch","useDispatch","books","useSelector","validPage","isNaN","parseInt","searchParams","URLSearchParams","getRecommended","Paginator","map","RecommendedBooksItem","_id","Dashboard","RecommendedFilter","Functionality","QuoteBlock","RecommendedBooksList"],"sourceRoot":""}